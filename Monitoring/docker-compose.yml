version: '3.9'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
     - "9090:9090"
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./Redis:/var/lib/grafana/plugins
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/provisioning/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://%(domain)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`13.212.129.10`) && PathPrefix(`/grafana`)"
    ports:
     - "3000:3000"
    networks:
      - monitor-net


  nodeexporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
       - "9100"
    networks:
      - monitor-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    networks:
     - monitor-net

  traefik:
    image: traefik
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--metrics.prometheus.entrypoint=web"
      - "--metrics.prometheus.addentrypointslabels=true"
      - "--metrics.prometheus.addserviceslabels=true"

    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`0.0.0.0`)"
      - "traefik.http.routers.api.service=api@internal"
    networks:
      - monitor-net

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    volumes:
      - "./postgres-data:/var/lib/postgresql/data"
    networks:
      - monitor-net

  postgres-exporter:
    image: wrouesnel/postgres_exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: postgresql://username:password@postgres:5432/dbname?sslmode=disable
    networks:
      - monitor-net
 
  ceph:
    image: ceph/daemon:v5.0.8-stable-5.0-octopus-centos-8
    container_name: ceph
    command: "demo"
    environment:
      - CEPH_DEMO_UID=demo
      - CEPH_DEMO_ACCESS_KEY=myaccesskey
      - CEPH_DEMO_SECRET_KEY=mysecretkey
      - CEPH_DEMO_BUCKET=mybucket
      - MON_IP=127.0.0.1
      - CEPH_PUBLIC_NETWORK=0.0.0.0/0
      - CEPH_DAEMON=demo
      - DEBUG=verbose
      - CEPHFS_CREATE=1
      - CEPHFS_DATA_POOL_PG=8
      - CEPHFS_METADATA_POOL_PG=8
      - SREE_PORT=5000
    privileged: true
    volumes:
      - "./ceph:/var/lib/ceph/"
      - "/etc/ceph:/etc/ceph"
      - "/dev:/dev"
    ports:
      - "5000:5000"
      - "6789:6789"
    networks:
      - monitor-net

  ceph-exporter:
    image: digitalocean/ceph_exporter
    container_name: ceph-exporter
    volumes:
      - "/etc/ceph:/etc/ceph:ro"
    networks:
      - monitor-net
